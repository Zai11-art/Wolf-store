generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "postgresql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Store {
    id         String     @id @default(uuid())
    name       String
    userId     String
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
    placards   Placard[]  @relation("StoreToPlacard")
    categories Category[] @relation("StoreToCategory")
    sizes      Size[]     @relation("StoreToSize")
    colors     Color[]    @relation("StoreToColor")
    products   Product[]  @relation("StoreToProduct")
    orders     Order[]    @relation("StoreToOrder")
}

model Placard {
    id         String     @id @default(uuid())
    storeId    String
    label      String
    imageUrl   String
    createdAt  DateTime   @default(now())
    updatedAt  DateTime   @updatedAt
    store      Store      @relation("StoreToPlacard", fields: [storeId], references: [id])
    categories Category[]

    @@index([storeId])
}

model Category {
    id        String    @id @default(uuid())
    storeId   String
    placardId String
    name      String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    store     Store     @relation("StoreToCategory", fields: [storeId], references: [id])
    placard   Placard   @relation(fields: [placardId], references: [id])
    products  Product[] @relation("CategoryToProduct")

    @@index([placardId])
    @@index([storeId])
}

model Size {
    id        String    @id @default(uuid())
    storeId   String
    name      String
    value     String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    store     Store     @relation("StoreToSize", fields: [storeId], references: [id])
    products  Product[]

    @@index([storeId])
}

model Color {
    id        String    @id @default(uuid())
    storeId   String
    name      String
    value     String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    store     Store     @relation("StoreToColor", fields: [storeId], references: [id])
    products  Product[]

    @@index([storeId])
}

model Product {
    id          String      @id @default(uuid())
    storeId     String
    categoryId  String
    name        String
    price       Decimal
    colorId     String
    sizeId      String
    isFeatured  Boolean     @default(false)
    isArchived  Boolean     @default(false)
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    store       Store       @relation("StoreToProduct", fields: [storeId], references: [id])
    category    Category    @relation("CategoryToProduct", fields: [categoryId], references: [id])
    color       Color       @relation(fields: [colorId], references: [id])
    size        Size        @relation(fields: [sizeId], references: [id])
    images      Image[]     @relation("ImageToProduct")
    orderItems  OrderItem[]
    description String
    stocks      Decimal

    @@index([storeId])
    @@index([categoryId])
    @@index([colorId])
    @@index([sizeId])
}

model Image {
    id        String   @id @default(uuid())
    productId String
    url       String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    product   Product  @relation("ImageToProduct", fields: [productId], references: [id], onDelete: Cascade)

    @@index([productId])
}

model Order {
    id         String      @id @default(uuid())
    storeId    String
    isPaid     Boolean     @default(false)
    phone      String      @default("")
    address    String      @default("")
    createdAt  DateTime    @default(now())
    updatedAt  DateTime    @updatedAt
    store      Store       @relation("StoreToOrder", fields: [storeId], references: [id])
    orderitems OrderItem[]

    @@index([storeId])
}

model OrderItem {
    id        String  @id @default(uuid())
    orderId   String
    productId String
    quantity  Decimal
    order     Order   @relation(fields: [orderId], references: [id])
    product   Product @relation(fields: [productId], references: [id])

    @@index([orderId])
    @@index([productId])
}
